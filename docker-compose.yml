version: "3.9"

services:
  
  api_service:
    container_name: api_service
    depends_on:
      - urls_service
      - cache_service
    build:
      context: .
      dockerfile: cmd/api/Dockerfile
    env_file:
      - .env
    ports:
      - "${API_PORT}:${API_PORT}"
    volumes:
      - pkg_data:/usr/src/app/pkg

  urls_service:
    container_name: urls_service
    depends_on:
      - postgres_db
    build:
      context: .
      dockerfile: cmd/urls/Dockerfile
    env_file:
      - .env
    ports:
      - "${CACHE_PORT}:${CACHE_PORT}"
    volumes:
      - pkg_data:/usr/src/app/pkg
  
  cache_service:
    container_name: cache_service
    depends_on:
      - redis_cache
    build:
      context: .
      dockerfile: cmd/cache/Dockerfile
    env_file:
      - .env
    ports:
      - "${URLS_PORT}:${URLS_PORT}"
    volumes:
      - pkg_data:/usr/src/app/pkg

  redis_cache:
    container_name: redis_cache
    image: redis
    env_file:
      - .env
    ports:
      - "${REDIS_PORT}:${REDIS_PORT}"
    volumes:
      - redis_data:/data

#  postgres_db:
#     container_name: postgres_db
#     image: "postgres"
#     env_file:
#       - .env
#     ports:
#       - "${POSTGRES_PORT}:${POSTGRES_PORT}"
#     volumes:
#      - postgres_data:/var/lib/postgresql/data

volumes:
  pkg_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${PWD}/pkg
  redis_data:
  # postgres_data:
  