// Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/ping": {
            "get": {
                "description": "Ping the server",
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "ping"
                ],
                "summary": "Ping the server",
                "operationId": "ping",
                "responses": {
                    "200": {
                        "description": "pong",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/websvc.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/url": {
            "post": {
                "description": "Create a new url redirect",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "url"
                ],
                "summary": "Create a new url redirect",
                "operationId": "create-url",
                "parameters": [
                    {
                        "description": "url",
                        "name": "url",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/websvc.CreateUrlRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/websvc.UrlDto"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/websvc.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/websvc.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/url/{urlId}": {
            "get": {
                "description": "Get url",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "url"
                ],
                "summary": "Get url",
                "operationId": "get-url",
                "parameters": [
                    {
                        "type": "string",
                        "description": "url id",
                        "name": "urlId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/websvc.UrlDto"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/websvc.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/websvc.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/{urlId}": {
            "get": {
                "description": "Redirect to url",
                "tags": [
                    "url"
                ],
                "summary": "Redirect to url",
                "operationId": "redirect-url",
                "parameters": [
                    {
                        "type": "string",
                        "description": "url id",
                        "name": "urlId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "302": {
                        "description": "Found"
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/websvc.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/websvc.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "websvc.CreateUrlRequest": {
            "type": "object",
            "required": [
                "redirectUrl"
            ],
            "properties": {
                "redirectUrl": {
                    "type": "string"
                }
            }
        },
        "websvc.ErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                }
            }
        },
        "websvc.UrlDto": {
            "type": "object",
            "properties": {
                "newUrl": {
                    "type": "string"
                },
                "redirectUrl": {
                    "type": "string"
                },
                "urlId": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8080",
	BasePath:         "/",
	Schemes:          []string{"http"},
	Title:            "URL Shortener API",
	Description:      "This is a URL shortener service.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
